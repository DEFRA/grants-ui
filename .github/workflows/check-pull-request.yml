name: Check Pull Request

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - edited
      - reopened
      - synchronize
      - ready_for_review

jobs:
  pr-validator:
    name: Run Pull Request Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test code and Create Test Coverage Reports
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm
      - run: |
          npm ci
          npm run format:check
          npm run lint
          npm test

      - name: Test Docker Image Build and Run
        run: |
          set -e
          docker build --no-cache --tag grants-ui-build-test .
          CONTAINER_ID=$(docker run --rm -d -p 3000:3000 -e SESSION_CACHE_ENGINE=memory grants-ui-build-test)
          echo "Container ID: $CONTAINER_ID"
          ATTEMPTS=0
          MAX_ATTEMPTS=15
          echo "Waiting for container to be healthy..."
          until $(curl --output /dev/null --silent --head --fail http://localhost:3000/health); do
              if [ ${ATTEMPTS} -eq ${MAX_ATTEMPTS} ]; then
                  echo "Error: Timed out waiting for container to be healthy."
                  echo "--- Container Logs ---"
                  docker logs $CONTAINER_ID
                  docker stop $CONTAINER_ID > /dev/null
                  exit 1
              fi
              printf '.'
              ATTEMPTS=$(($ATTEMPTS+1))
              sleep 2
          done
          echo -e "\nContainer is healthy!"
          docker stop $CONTAINER_ID > /dev/null

      - name: Run Snyk test
        if: github.actor != 'dependabot[bot]'
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: SonarCloud Scan
        if: github.actor != 'dependabot[bot]'
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
